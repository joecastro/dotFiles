local Color(r, g, b, a=1) = {
    assert r >= 0 && r <= 1: "Red component must be between 0 and 1",
    assert g >= 0 && g <= 1: "Green component must be between 0 and 1",
    assert b >= 0 && b <= 1: "Blue component must be between 0 and 1",
    assert a >= 0 && a <= 1: "Alpha component must be between 0 and 1",

    red:: r,
    green:: g,
    blue:: b,
    alpha:: a,

    red255:: std.round(r * 255),
    green255:: std.round(g * 255),
    blue255:: std.round(b * 255),
    alpha255:: std.round(a * 255),

    assert $.red255 >= 0 && $.red255 <= 255: "Red component must be between 0 and 255",
    assert $.green255 >= 0 && $.green255 <= 255: "Green component must be between 0 and 255",
    assert $.blue255 >= 0 && $.blue255 <= 255: "Blue component must be between 0 and 255",
    assert $.alpha255 >= 0 && $.alpha255 <= 255: "Alpha component must be between 0 and 255",

    hexcolor:: "#%02x%02x%02x" % [$.red255, $.green255, $.blue255],
    HEXCOLOR:: std.asciiUpper($.hexcolor)
};

local ColorFromHex(hex) =
    local r = std.parseHex(std.substr(hex, 1, 2)) / 255;
    local g = std.parseHex(std.substr(hex, 3, 2)) / 255;
    local b = std.parseHex(std.substr(hex, 5, 2)) / 255;
    Color(r, g, b);

local ColorWithAlpha(color, alpha) =
    Color(color.red, color.green, color.blue, alpha);

local Black = Color(0, 0, 0);
local Blue = Color(0, 0, 1);
local Green = Color(0, 1, 0);
local Cyan = Color(0, 1, 1);
local Red = Color(1, 0, 0);
local Magenta = Color(1, 0, 1);
local Yellow = Color(1, 1, 0);
local White = Color(1, 1, 1);

local AnsiColorScheme(black, red, green, yellow, blue, magenta, cyan, white, bright_black, bright_red, bright_green, bright_yellow, bright_blue, bright_magenta, bright_cyan, bright_white) = {
    black:: black,
    red:: red,
    green:: green,
    yellow:: yellow,
    blue:: blue,
    magenta:: magenta,
    cyan:: cyan,
    white:: white,
    bright_black:: bright_black,
    bright_red:: bright_red,
    bright_green:: bright_green,
    bright_yellow:: bright_yellow,
    bright_blue:: bright_blue,
    bright_magenta:: bright_magenta,
    bright_cyan:: bright_cyan,
    bright_white:: bright_white,

    color0:: black,
    color1:: red,
    color2:: green,
    color3:: yellow,
    color4:: blue,
    color5:: magenta,
    color6:: cyan,
    color7:: white,
    color8:: bright_black,
    color9:: bright_red,
    color10:: bright_green,
    color11:: bright_yellow,
    color12:: bright_blue,
    color13:: bright_magenta,
    color14:: bright_cyan,
    color15:: bright_white,

    color0_bold:: bright_black,
    color1_bold:: bright_red,
    color2_bold:: bright_green,
    color3_bold:: bright_yellow,
    color4_bold:: bright_blue,
    color5_bold:: bright_magenta,
    color6_bold:: bright_cyan,
    color7_bold:: bright_white,

    color_pack:: {
        black: black.hexcolor,
        blue: blue.hexcolor,
        cyan: cyan.hexcolor,
        green: green.hexcolor,
        purple: magenta.hexcolor,
        red: red.hexcolor,
        white: white.hexcolor,
        yellow: yellow.hexcolor
    },

    bright_color_pack:: {
        brightBlack: bright_black.hexcolor,
        brightBlue: bright_blue.hexcolor,
        brightCyan: bright_cyan.hexcolor,
        brightGreen: bright_green.hexcolor,
        brightPurple: bright_magenta.hexcolor,
        brightRed: bright_red.hexcolor,
        brightWhite: bright_white.hexcolor,
        brightYellow: bright_yellow.hexcolor
    },

    printable:: {
        black: black.hexcolor,
        red: red.hexcolor,
        green: green.hexcolor,
        yellow: yellow.hexcolor,
        blue: blue.hexcolor,
        magenta: magenta.hexcolor,
        cyan: cyan.hexcolor,
        white: white.hexcolor,
        bright_black: bright_black.hexcolor,
        bright_red: bright_red.hexcolor,
        bright_green: bright_green.hexcolor,
        bright_yellow: bright_yellow.hexcolor,
        bright_blue: bright_blue.hexcolor,
        bright_magenta: bright_magenta.hexcolor,
        bright_cyan: bright_cyan.hexcolor,
        bright_white: bright_white.hexcolor,
    }
};
local ExtendedTerminalColors(
        foreground,
        background,
        bold,
        link,
        selection_background,
        selection_foreground,
        cursor_background,
        cursor_foreground,
        underline,
        tab) = {
    foreground: foreground,
    background: background,
    bold: bold,
    link: link,
    selection_background: selection_background,
    selection_foreground: selection_foreground,
    cursor_foreground: cursor_foreground,
    cursor_background: cursor_background,
    underline: underline,
    tab: tab
};
{
    Color: Color,
    AnsiColorScheme: AnsiColorScheme,
    ExtendedTerminalColors: ExtendedTerminalColors,
    ColorFromHex: ColorFromHex,
    ColorWithAlpha: ColorWithAlpha,
    # https://hexcolor.co
    Colors: {
        Black: ColorFromHex("#000000"),
        BlueBell: ColorFromHex("#95a0c5"),
        BlueMartini: ColorFromHex("#52B4D3"),
        ForestGreen: ColorFromHex("#228B22"),
        Ginger: ColorFromHex("#B06500"),
        GuardsmanRed: ColorFromHex("#D31100"),
        CeruleanBlue: Color(0, 0.36, 0.73, 1),
        NoblePlum: ColorFromHex("#871F78"),
        SelectiveYellow: ColorFromHex("#ffb506"),
        Viola: ColorFromHex("#cc87a9"),
        White: ColorFromHex("#FFFFFF"),
        YellowSea: ColorFromHex("#ffaf00"),
    },
    Schemes: {
        Iterm: AnsiColorScheme(
            Color(0, 0, 0),
            Color(0.8, 0, 0),
            Color(0.31, 0.60, 0.02),
            Color(0.77, 0.63, 0),
            Color(0.20, 0.40, 0.64),
            Color(0.46, 0.31, 0.48),
            Color(0.02, 0.60, 0.60),
            Color(0.83, 0.84, 0.81),
            Color(0.33, 0.34, 0.33),
            Color(0.94, 0.16, 0.16),
            Color(0.54, 0.89, 0.20),
            Color(0.99, 0.91, 0.31),
            Color(0.45, 0.62, 0.81),
            Color(0.68, 0.50, 0.66),
            Color(0.20, 0.89, 0.89),
            Color(0.93, 0.93, 0.92)),
        GCloud: AnsiColorScheme(
            Color(0.14, 0.15, 0.15),
            Color(0.93, 0.08, 0.08),
            Color(0.07, 0.82, 0.82),
            Color(0.96, 0.45, 0.45),
            Color(0.11, 0.60, 0.60),
            Color(0.61, 0.35, 0.35),
            Color(0.10, 0.74, 0.74),
            Color(1.00, 1.00, 1.00),
            Color(0.50, 0.55, 0.55),
            Color(0.75, 0.22, 0.22),
            Color(0.11, 0.86, 0.86),
            Color(0.99, 0.74, 0.74),
            Color(0.24, 0.68, 0.68),
            Color(0.56, 0.27, 0.27),
            Color(0.09, 0.63, 0.63),
            Color(1.00, 1.00, 1.00)),
        Campbell: AnsiColorScheme(
            ColorFromHex("#0C0C0C"),
            ColorFromHex("#0037DA"),
            ColorFromHex("#3A96DD"),
            ColorFromHex("#13A10E"),
            ColorFromHex("#881798"),
            ColorFromHex("#C50F1F"),
            ColorFromHex("#CCCCCC"),
            ColorFromHex("#C19C00"),
            ColorFromHex("#767676"),
            ColorFromHex("#3B78FF"),
            ColorFromHex("#61D6D6"),
            ColorFromHex("#16C60C"),
            ColorFromHex("#B4009E"),
            ColorFromHex("#E74856"),
            ColorFromHex("#F2F2F2"),
            ColorFromHex("#F9F1A5")),
        OneHalfDark: AnsiColorScheme(
            ColorFromHex("#282C34"),
            ColorFromHex("#61AFEF"),
            ColorFromHex("#56B6C2"),
            ColorFromHex("#98C379"),
            ColorFromHex("#C678DD"),
            ColorFromHex("#E06C75"),
            ColorFromHex("#DCDFE4"),
            ColorFromHex("#E5C07B"),
            ColorFromHex("#5A6374"),
            ColorFromHex("#61AFEF"),
            ColorFromHex("#56B6C2"),
            ColorFromHex("#98C379"),
            ColorFromHex("#C678DD"),
            ColorFromHex("#E06C75"),
            ColorFromHex("#DCDFE4"),
            ColorFromHex("#E5C07B")),
        OneHalfLight: AnsiColorScheme(
            ColorFromHex("#383A42"),
            ColorFromHex("#0184BC"),
            ColorFromHex("#0997B3"),
            ColorFromHex("#50A14F"),
            ColorFromHex("#A626A4"),
            ColorFromHex("#E45649"),
            ColorFromHex("#FAFAFA"),
            ColorFromHex("#C18301"),
            ColorFromHex("#4F525D"),
            ColorFromHex("#61AFEF"),
            ColorFromHex("#56B5C1"),
            ColorFromHex("#98C379"),
            ColorFromHex("#C577DD"),
            ColorFromHex("#DF6C75"),
            ColorFromHex("#FFFFFF"),
            ColorFromHex("#E4C07A")),
        Solarized: AnsiColorScheme(
            ColorFromHex("#002B36"),
            ColorFromHex("#268BD2"),
            ColorFromHex("#2AA198"),
            ColorFromHex("#859900"),
            ColorFromHex("#D33682"),
            ColorFromHex("#DC322F"),
            ColorFromHex("#EEE8D5"),
            ColorFromHex("#B58900"),
            ColorFromHex("#073642"),
            ColorFromHex("#839496"),
            ColorFromHex("#93A1A1"),
            ColorFromHex("#586E75"),
            ColorFromHex("#6C71C4"),
            ColorFromHex("#CB4B16"),
            ColorFromHex("#FDF6E3"),
            ColorFromHex("#657B83")),
        Tango: AnsiColorScheme(
            ColorFromHex("#000000"),
            ColorFromHex("#3465A4"),
            ColorFromHex("#06989A"),
            ColorFromHex("#4E9A06"),
            ColorFromHex("#75507B"),
            ColorFromHex("#CC0000"),
            ColorFromHex("#D3D7CF"),
            ColorFromHex("#C4A000"),
            ColorFromHex("#555753"),
            ColorFromHex("#729FCF"),
            ColorFromHex("#34E2E2"),
            ColorFromHex("#8AE234"),
            ColorFromHex("#AD7FA8"),
            ColorFromHex("#EF2929"),
            ColorFromHex("#EEEEEC"),
            ColorFromHex("#FCE94F")),
        Ubuntu: AnsiColorScheme(
            ColorFromHex("#171421"),
            ColorFromHex("#0037DA"),
            ColorFromHex("#3A96DD"),
            ColorFromHex("#26A269"),
            ColorFromHex("#881798"),
            ColorFromHex("#C21A23"),
            ColorFromHex("#CCCCCC"),
            ColorFromHex("#A2734C"),
            ColorFromHex("#767676"),
            ColorFromHex("#08458F"),
            ColorFromHex("#2C9FB3"),
            ColorFromHex("#26A269"),
            ColorFromHex("#A347BA"),
            ColorFromHex("#C01C28"),
            ColorFromHex("#F2F2F2"),
            ColorFromHex("#A2734C")),
        Ubuntu2: AnsiColorScheme(
            ColorFromHex("#2e3436"),
            ColorFromHex("#3465a4"),
            ColorFromHex("#06989a"),
            ColorFromHex("#4e9a06"),
            ColorFromHex("#75507b"),
            ColorFromHex("#cc0000"),
            ColorFromHex("#d3d7cf"),
            ColorFromHex("#c4a000"),
            ColorFromHex("#555753"),
            ColorFromHex("#729fcf"),
            ColorFromHex("#34e2e2"),
            ColorFromHex("#8ae234"),
            ColorFromHex("#ad7fa8"),
            ColorFromHex("#ef2929"),
            ColorFromHex("#eeeeec"),
            ColorFromHex("#fce94f")),
        Vintage: AnsiColorScheme(
            ColorFromHex("#000000"),
            ColorFromHex("#000080"),
            ColorFromHex("#008080"),
            ColorFromHex("#008000"),
            ColorFromHex("#800080"),
            ColorFromHex("#800000"),
            ColorFromHex("#C0C0C0"),
            ColorFromHex("#808000"),
            ColorFromHex("#808080"),
            ColorFromHex("#0000FF"),
            ColorFromHex("#00FFFF"),
            ColorFromHex("#00FF00"),
            ColorFromHex("#FF00FF"),
            ColorFromHex("#FF0000"),
            ColorFromHex("#FFFFFF"),
            ColorFromHex("#FFFF00")),
        Frost: AnsiColorScheme(
            ColorFromHex("#3C5712"),
            ColorFromHex("#17b2ff"),
            ColorFromHex("#3C96A6"),
            ColorFromHex("#6AAE08"),
            ColorFromHex("#991070"),
            ColorFromHex("#8D0C0C"),
            ColorFromHex("#6E386E"),
            ColorFromHex("#991070"),
            ColorFromHex("#749B36"),
            ColorFromHex("#27B2F6"),
            ColorFromHex("#13A8C0"),
            ColorFromHex("#89AF50"),
            ColorFromHex("#F2A20A"),
            ColorFromHex("#F49B36"),
            ColorFromHex("#741274"),
            ColorFromHex("#991070")),
    }
}
